name: Release Candidate 

on:
  workflow_dispatch:
  push:
    branches:
      - release/*

permissions:
  contents: write
  pull-requests: write

jobs:
  release-candidate:
    runs-on: ubuntu-latest
    steps:
      # Checkout code based on the event type
      - name: Checkout code for workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Checkout code for push
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Calculate version bump
        id: commitizen
        uses: commitizen-tools/commitizen-action@master
        with:
          commit: false
          push: false
          changelog_increment_filename: body.md

      - name: Create release PR
        shell: bash
        if: github.event_name == 'workflow_dispatch' && steps.commitizen.outputs.version != ''
        run: |
          RELEASE_VERSION=${{ steps.commitizen.outputs.version }}
          RELEASE_BRANCH=release/$RELEASE_VERSION

          if ! git ls-remote --heads origin $RELEASE_BRANCH | grep -q 'refs/heads'; then
            git checkout -b $RELEASE_BRANCH
            git push origin $RELEASE_BRANCH
          fi

          if ! gh pr list --head $RELEASE_BRANCH --label "release" | grep -q $RELEASE_BRANCH; then
            gh pr create \
              --base master \
              --head $RELEASE_BRANCH \
              --title "Release v${RELEASE_VERSION}" \
              --body "$(cat body.md)" \
              --label release
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Update PR Body
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('body.md', 'utf8');
            const warningMessage = `

            ⚠️ Please use \`Create a merge commit\` button. This is very important to maintain commit history integrity.
            `;

            const branchName = process.env.GITHUB_REF.replace('refs/heads/', '');
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Find open PRs from this branch
            const { data: prs } = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:${branchName}`,
            });

            if (prs.length > 0) {
              const prNumber = prs[0].number;
              const updatedBody = body + warningMessage;

              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: prNumber,
                body: updatedBody,
              });
            } else {
              console.log(`No open PR found for branch ${branchName}`);
            }
