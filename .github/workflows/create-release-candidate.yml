name: Create Release Candidate

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  create-release-candidate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        # with:
        #   ref: develop
      - name: Check tags
        shell: bash
        run: |
          git fetch origin --tags
          mkdir -p ${{ runner.temp }}
      - name: Calculate version bump
        id: commitizen
        uses: commitizen-tools/commitizen-action@master
        with:
          push: false
          changelog_increment_filename: body.md
      - name: Store changelog
        id: changelog
        run: |
          echo "content='$(cat body.md)'" >> $GITHUB_OUTPUT
          rm body.md
      - name: Create release PR
        uses: peter-evans/create-pull-request@v7
        with:
          base: main
          branch: release/${{ steps.commitizen.outputs.version }}
          labels: release
          delete-branch: false
          title: "Release v${{ steps.commitizen.outputs.version }}"
          body: ${{ steps.changelog.outputs.content}}
      # - name: Create release PR
      #   shell: bash
      #   if: steps.commitizen.outputs.version != ''
      #   run: |
      #     RELEASE_VERSION=${{ steps.commitizen.outputs.version }}
      #     RELEASE_BRANCH=release/$RELEASE_VERSION

      #     if ! git ls-remote --heads origin $RELEASE_BRANCH | grep -q 'refs/heads'; then
      #       git checkout -b $RELEASE_BRANCH
      #       git push origin $RELEASE_BRANCH
      #     fi

      #     if ! gh pr list --head $RELEASE_BRANCH --label "release" | grep -q $RELEASE_BRANCH; then
      #       gh pr create \
      #         --base main \
      #         --head $RELEASE_BRANCH \
      #         --title "Release v${RELEASE_VERSION}" \
      #         --body "$(cat body.md)" \
      #         --label release
      #     fi
      #   env:
      #     GH_TOKEN: ${{ github.token }}